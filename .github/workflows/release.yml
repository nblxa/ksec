name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        id: tag
        uses: devops-actions/action-get-tag@v1.0.3
        with:
          strip_v: true
      - uses: actions/checkout@v4
      - uses: actions-rs/cargo@v1
        name: Install cargo-edit
        with:
          command: install
          args: cargo-edit
      - uses: actions-rs/cargo@v1
        name: "Set crate version to ${{ steps.tag.outputs.tag }}"
        with:
          command: set-version
          args: ${{ steps.tag.outputs.tag }}
      - uses: actions/cache/save@v4
        with:
          path: |
            Cargo.toml
            Cargo.lock
          key: "${{ env.GITHUB_RUN_ID }}-${{ env.GITHUB_RUN_ATTEMPT }}-cargo"
          enableCrossOsArchive: true
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # (optional) Path to changelog.
          #changelog: CHANGELOG.md
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        with:
          path: "cargo.*"
          key: "${{ env.GITHUB_RUN_ID }}-${{ env.GITHUB_RUN_ATTEMPT }}-cargo"
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
          # Note that glob pattern is not supported yet.
          bin: ksec
          # (optional) Target triple, default is host triple.
          # This is optional, but it is recommended that this always be set to
          # clarify which target you are building for if macOS is included in
          # the matrix because GitHub Actions changed the default architecture
          # of macos-latest since macos-14.
          target: ${{ matrix.target }}
          # (optional) On which platform to distribute the `.tar.gz` file.
          # [default value: unix]
          # [possible values: all, unix, windows, none]
          tar: unix
          # (optional) On which platform to distribute the `.zip` file.
          # [default value: windows]
          # [possible values: all, unix, windows, none]
          zip: windows
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}

  test-install:
    needs: upload-assets
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install ksec
        run: curl -sSL https://github.com/nblxa/ksec/raw/refs/tags/v${{ steps.tag.outputs.tag }}/install.sh | sh
      - name: Update PATH
        run: echo "$HOME/.ksec/bin" >> $GITHUB_PATH
      - name: Verify ksec version
        run: |
          version=$(ksec --version)
          echo "ksec --version: '$version'"
          [ "$version" = 'ksec ${{ steps.tag.outputs.tag }}' ]
